on:
  workflow_dispatch:
    inputs:
       action:
         description: 'Terraform apply or destroy'
         type: choice
         options:
         - apply
         - destroy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      #- name: Build the Docker image
        #run: |
          #cd umami
          #docker build . --file Dockerfile --tag kadonne55/cloud_computing:latest
      #- name: Push image to Docker hub
        #run: |
          #docker login -u kadonne55 -p ${{ secrets.DOCKER_HUB_TOKEN }}
          #docker push kadonne55/cloud_computing:latest
  terraform_apply:
    name: "Terraform_apply"
    if: ${{ github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve 

      - name: Log into EC2 and deploy Docker
        run: |
          PUBLIC_IP=$(terraform output -raw public_ip | awk '/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/ { print $1; exit }')
          echo $PUBLIC_IP
          echo "HERE"
          echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo ${{ secrets.EC2_KEY }} > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@$EC2_PUBLIC_IP
          echo "HELLO FROM EC2"
  
  terraform_destroy:
    name: "Terraform_destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        working-directory: terraform/
        run: terraform destroy -auto-approve 
